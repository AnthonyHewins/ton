syntax = "proto3";

import "google/protobuf/timestamp.proto";

package marketdata.v0;

option go_package = "github.com/AnthonyHewins/ton/gen/go/marketdata/v0;marketdata";

message Bar {
    google.protobuf.Timestamp timestamp = 1;
    double open = 2;
    double high = 3;
    double low = 4;
    double close = 5;
    double up_volume = 6;
    double down_volume = 7;
    double up_ticks = 8;
    double down_ticks = 9;
    double bid_volume = 10;
    double offer_volume = 11;
}

message Tick {
    int64 id = 1;
    int64 relative_time = 2;
    int64 relative_price = 3;
    int64 volume = 4;
    double relative_bid_price = 5;
    double relative_ask_price = 6;
    double bid_size = 7;
    double ask_size = 8;
}

message TickChart {
    int64 id = 1;
    google.protobuf.Timestamp trade_date = 2;
    bool end_of_history = 3;
    string source = 4;
    int64 base_price = 5;
    google.protobuf.Timestamp base_timestamp = 6;
    double tick_size = 7;
    repeated Tick ticks = 8;
}

message BarChart {
    int64 id = 1;
    google.protobuf.Timestamp trade_date = 2;
    repeated Bar bars = 3;
}

message PriceQty {
    double price = 1;
    double size = 2;
}

message DOMs { repeated DOM doms = 1; }
message DOM {
    int64         contract_id = 1;
    google.protobuf.Timestamp   timestamp  = 2;
    repeated PriceQty  bids       = 3;
    repeated PriceQty  offers     = 4;
}


message Quotes { repeated Quote quotes = 1; }
message Quote {
    int64       contract_id = 1;
    google.protobuf.Timestamp timestamp  = 2;
    PriceQty  bid   = 3;
    PriceQty  offer = 4;
    PriceQty  trade = 5;
    double   total_trade_volume = 6;
    double   open_interest     = 7;
    double   low_price        = 8;
    double   opening_price    = 9;
    double   high_price       = 10;
    double   settlement_price = 11;
}

message Histograms { repeated Histogram histograms = 1; }
message Histogram {
    int64 contract_id = 1;
    google.protobuf.Timestamp timestamp = 2;
    google.protobuf.Timestamp trade_date = 3;
    double base = 4;
    map<string, double> items = 5;
    bool refresh = 6;
}